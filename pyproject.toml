[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "langvision"
version = "0.1.0"
description = "A package for finetuning vision models."
authors = [
    { name = "Pritesh Raj", email = "priteshraj10@gmail.com" }
]
maintainers = [
    { name = "Pritesh Raj", email = "priteshraj10@gmail.com" }
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8"
keywords = ["vision", "transformer", "lora", "fine-tuning", "deep-learning", "computer-vision"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Image Processing",
]
dependencies = [
    "torch>=1.10.0",
    "torchvision>=0.11.0",
    "numpy>=1.21.0",
    "tqdm>=4.62.0",
    "pyyaml>=6.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "pillow>=8.3.0",
    "timm>=0.6.0",
    "transformers>=4.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.8.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "bandit>=1.7.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
    "sphinx-autodoc-typehints>=1.19.0",
]
examples = [
    "jupyter>=1.0.0",
    "ipywidgets>=7.6.0",
    "tensorboard>=2.9.0",
    "wandb>=0.13.0",
]
gpu = [
    "torch>=1.10.0+cu113",
    "torchvision>=0.11.0+cu113",
]

[project.urls]
Homepage = "https://github.com/langtrain-ai/langtrain"
Documentation = "https://github.com/langtrain-ai/langtrain/tree/main/docs"
Repository = "https://github.com/langtrain-ai/langtrain"
"Bug Tracker" = "https://github.com/langtrain-ai/langtrain/issues"
"Source Code" = "https://github.com/langtrain-ai/langtrain"
Changelog = "https://github.com/langtrain-ai/langtrain/blob/main/CHANGELOG.md"

[project.scripts]
langvision-finetune = "langvision.cli.finetune:main"
langvision-train = "langvision.cli.train:main"
langvision = "langvision.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
langvision = ["*.pyi", "py.typed"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["langvision"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/langvision"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[bumpver]
current_version = "0.1.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "Bump version: {old_version} â†’ {new_version}"
tag_message = "v{new_version}" 